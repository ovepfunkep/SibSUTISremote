<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="do.sibsutis.ru">

  <title>Лекция 1. Конспект лекций</title>
	
	<link rel="icon" type="image/png" href="../lib/css/favicon.png">
  <!-- Bootstrap Core CSS -->
  <link href="../lib/css/bootstrap.css" rel="stylesheet">
<link href="../lib/css/prettify.css" rel="stylesheet">	
  <!-- Custom CSS -->
  <link href="../lib/css/scrolling-nav.css" rel="stylesheet">

  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
  <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
  <![endif]-->
</head>

<!-- The #page-top ID is part of the scrolling feature - the data-spy and data-target are part of the built-in Bootstrap scrollspy function -->

<body id="page-top" data-spy="scroll" data-target=".navbar-fixed-top">
  <!-- Navigation -->
<nav class="navbar navbar-default navbar-fixed-top">
 <div class="container">
  <!-- Brand and toggle get grouped for better mobile display -->
  <div class="navbar-header">
   <li class="hidden"> <a class="page-scroll" href="#page-top"></a> </li>
	 
	 <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
   </button>
	 
   <a class="navbar-brand " href="../index.htm"> 
  <text class = "hidden-xs">Программирование (часть 2)</text> 
  <text class = "visible-xs">Программирование (часть 2)</text>
	 </a>
  </div>

  <!-- Collect the nav links, forms, and glyphicon glyphicon-list-alt content for toggling -->
  <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
   
	 <!-- <ul class="nav navbar-nav">
		<li><a href="#"></a></li> 
   </ul> -->
	
   <ul class="nav navbar-nav navbar-right">
    <li class="dropdown">
		<button type="button" class="navbar-toggle dropdown-toggle hidden-xs" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
		</button>	   
		<a class = "dropdown-toggle visible-xs" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Материалы</a>
     <ul class="dropdown-menu">
    <li><a href="../index.htm">Аннотация курса</a></li>
      <li role="separator" class="divider"></li>
  
 <li><a href="lec_index.htm">Теория</a></li>
 
<li><a href="labs.htm">Лабораторные работы</a></li>  
 <li><a href="c_work.htm">Контрольная работа</a></li>

 
      <li role="separator" class="divider"></li>
   

      <li><a href="lit.htm">Литература</a></li>
      <!--li><a href="q.htm">Вопросы для самопроверки</a></li-->			
     </ul>
 </li>
 </ul>
  </div><!-- /.navbar-collapse -->
 </div><!-- /.container-fluid -->
</nav>


  <div id="intro" class="section content-section ">
    <div class="container">
       <div class="row">
        <div class="col-lg-12">	


<!-- содержание -->	
<div class="page-header">				
<h3><a href="#">1. Структура программы и интегрированная среда Borland С</a></h3>
<a href="#1" class=punkt>1.1. Алфавит и идентификаторы языка Си</a><br> 
<a href="#2" class=punkt>1.2. Переменные</a><br>
<a href="#3" class=punkt>1.3. Операции</a><br>
<a href="#4" class=punkt>1.4. Операторы ввода/вывода</a><br>
<a href="#5" class=punkt>1.5. Программирование алгоритма линейной структуры на языке Си</a><br>
<a href="#6" class=punkt>1.6. Интегрированная Среда Borland C</a><br>
<a href="#7" class=punkt>1.7. Ввод и выполнение программ в Интегрированной Среде Borland C</a><br>
<a href="#8" class=punkt>Контрольные вопросы</a><br> 
</div>
<!--начало-->
<a name=1 class="anchor"></a>
<h3>1.1. Алфавит и идентификаторы языка Си</h3>

<P><b>Алфавит</b>. В алфавит языка Си входят:</P>
<P>- прописные и строчные буквы латинского алфавита;</P>
<P>- цифры;</P>
<P>- специальные знаки “ , {} | [ ] ( ) + - / % \ ; ‘ .
 : ? &lt; = &gt; _ ! &amp; * # ~ ^</P>
<P>- неизображаемые символы, например, пробел, табуляция.</P>
<P><b>Идентификатор</b>. Последовательность букв,
 цифр, символов подчеркивания, начинающаяся с буквы или символа подчёркивания,
 считается идентификатором языка Си. Например, Lab_1, size22, _min, TIME,
 time.</P>
<P>Прописные и строчные буквы различаются, т.е. два последних
 идентификатора различны. Идентификаторы могут иметь различную длину, но
 компилятор учитывает не более 31-го символа.</P>
<P>&nbsp;</P>
<a name=2 class="anchor"></a>
<h3>1.2. Переменные</h3>
<P></P>
<P>Переменная – это именованная область памяти. Отличительная
 особенность переменной – возможность связывать с её именем различные значения,
 совокупность которых определяется типом переменной. Каждая переменная
 перед её использованием в программе должна быть определена, т.е. для неё
 должна быть выделена память. Размер участка памяти зависит от типа переменной.</P>
<P>&#9;Основные типы переменных и их предельно допустимые
 значения:</P>
<P>char&#9;&#9; -128…127&#9;&#9;&#9;&#9;1 байт</P>
<P>unsigned char 0…255&#9;&#9;&#9;&#9;1 байт</P>
<P>int&#9;&#9;&#9;-32768…32767 &#9;&#9;&#9;2 байта</P>
<P>unsigned int&#9;&#9;0…65535&#9;&#9;&#9;&#9;2 байта</P>
<P>long&#9;&#9;&#9;-2147483648…2147483647&#9;4 байта</P>
<P>unsigned long&#9;0…4294967295&#9;&#9;&#9;4 байта</P>
<P>float&#9;&#9;&#9;3.4E-38…3.4E+38&#9;&#9;&#9;4 байта</P>
<P>double&#9;&#9;1.7E-308…1.7E+308&#9;&#9;8 байт</P>
<P>long double&#9;&#9;3.4E-4932…1.1E+4932&#9;&#9;10 байт</P>
<P></P>
<P>&nbsp;</P>
<a name=3 class="anchor"></a>
<h3>1.3. Операции</h3>
<P></P>
<P>1). Операция присваивания : “=”.</P>
<P>2). Аддитивные операции : “ +”,”-“;</P>
<P>3). Мультипликативные : “*”,”/”,”%”; % - получение остатка
 от деления, </P>
<P> “/” - целочисленное деление (остаток отбрасывается);</P>
<P>4). Логические операции : &amp;&amp; (and), || (or),
 ! (not);</P>
<P>5). Операции отношения : == (равно), != (не равно), &lt;
 (меньше), &gt; (больше), &lt;= </P>
<P> (меньше или равно), &gt;= (больше или равно);</P>
<P>6). Операции модификации : *= присваивание после умножения
 (p *= 2; </P>
<P> эквивалентно p=p*2;) /= присваивание после деления (p
 /= 2; эквивалентно </P>
<P> p=p/2; ) += присваивание после суммирования (a += b;
 эквивалентно a=a+b;) </P>
<P> -= присваивание после вычитания (a -= b; эквивалентно
 a=a-b;) %= </P>
<P> присваивание после деления по модулю (n %= 3; эквивалентно
 n=n % 3;) </P>
<P> a++ (--) постфиксное изменение (a++; эквивалентно a=a+1;
 значение а </P>
<P> сначала используется, затем изменяется) ++(--)a префиксное
 изменение</P>
<P> (++a; эквивалентно a=a+1; значение а сначала изменяется,
 затем</P>
<P> используется). </P>
<P>&nbsp;</P>
<a name=4 class="anchor"></a>
<h3>1.4. Операторы ввода/вывода</h3>
<P>1). Оператор вывода : </P>
<P>printf(&lt;форматная строка&gt;, переменные);</P>
<P>Форматная строка может включать текст для вывода на экран, спецификаторы
 формата, управляющие символы. Список переменных должен быть согласован
 со спецификаторами формата по типу и количеству. </P>
<P>Спецификатор формата:</P>
<P>&#9;%[флаг] [ширина] [. точность] [l]</P>
<P>[флаг] : “-“ или “+” ; ”-“ выравнивает текст вывода по левому краю; “+”
 выводит знак для положительных и отрицательных значений;</P>
<P>[ширина] : минимальный размер поля вывода;</P>
<P>[.точность] : для вещественных чисел количество знаков после десятичной
 точки;</P>
<P>[l] : для вывода целых чисел типа long;</P>
<P>При выводе переменных различных типов используются следующие форматы:</P>
<P>%c – char;</P>
<P>%d – целое десятичное:</P>
<P>%u – беззнаковое целое;</P>
<P>%o – целое восьмеричное;</P>
<P>%x – целое шестнадцатеричное;</P>
<P>%s – строка;</P>
<P>%f – вещественное число с фиксированной точкой;</P>
<P>%e – вещественное число в экспоненциальной форме;</P>
<P>%g – вещественное число ( выводится в формате %f или %e , что более компактно).</P>
<P>Управляющие символы:</P>
<P>\n – перевод строки;</P>
<P>\t – табуляция;</P>
<P>\v – вертикальная табуляция;</P>
<P>\b – возврат на 1 символ;</P>
<P>\r – возврат на начало строки;</P>
<P>\a – звуковой сигнал.</P>
<P>2). Оператор ввода :</P>
<P>&#9;scanf(&lt;форматная строка&gt;, адреса переменных);</P>
<P>В отличие от printf () форматная строка должна включать
 в себя только форматы (если их несколько, они разделяются пробелами).
 Количество форматов определяется количеством переменных. Форматы при вводе
 переменных различных типов такие же, как и при выводе. Перед именами строк
 и массивов операция взятия адреса &amp; не ставится, т.к. имя строки или
 массива само определяет их адрес. </P>

<P>&nbsp;</p>
 <a name=5 class="anchor"></a>
<h3>1.5. Программирование алгоритма линейной структуры
 на языке Си</h3>

<P>Чаще всего линейные алгоритмы используются для программирования
 вычислений по формулам. В этом случае удобно использовать набор стандартных
 функций Си, содержащихся в библиотеке и доступных при подключении заголовочного
 файла math.h :</P>
<P>sin (x) - sin x; cos (x) – cos x ; tan(x) - tg х ; log
 (x) - ln x; log10(x) – lg x; exp(x) - показательная функция e<SUP>x</SUP>
 ; sqrt (x)- корень квадратный от х; роw(x, y) – x в степени y; abs(x)-
 модуль x.; acos(x) – arccos x; asin(x) – arcsin x; atan(x)- arctg x; sinh(x)-
 sh x; cosh (x) – ch x; tanh(x)-th x.</P>
<P>&#9;Для тригонометрических функций аргумент х измеряется
 в радианах и имеет тип double, как и значения функций. </P>
<P></P>
<P>Пример программы линейной структуры:</P>
<P></P>
<P>Вычислить площадь и стороны прямоугольного треугольника,
 если известны гипотенуза c и угол x. Для вычислений воспользуемся формулами
 :</P>
<P> &#9;a=c&#8226; sin x; b=c&#8226; cos x; S=ab;</P>
<P>Программа вычислений имеет вид:</P>

<pre class="prettyprint">
// вычисление сторон и площади треугольника

#include &lt;stdio.h&gt; //заголовочный файл для организации ввода-вывода
 
#include &lt;math.h&gt; //заголовочный файл математических функций

main() //главная функция

{
   float a,b,c,x, S; //описание переменных вещественного типа
 
   printf ("\n Введите гипотенузу и угол треугольника ");

   scanf ("%f%f ",&c,&x); // ввод значений вещественного типа

   a=c*sin(x);

   b=c*cos(x);

   S=a*b;

   printf ("\n Результаты: a=%7.2f b=%7.2f S=%7.2f ",a, b, S);

   return 0;

}
</pre>

<P> Комментарий в программе не влияет на компиляцию программы,
 а служит для разъяснения действий основных блоков текста и программы в
 целом. Однострочный комментарий действует от двух символов // до конца
 строки. Многострочный комментарий заключается в пары символов /* и */.</P>
<P>Вторая строка программы #include &lt;stdio.h&gt; является
 директивой компилятора для включения заголовочного файла stdio.h для доступа
 к средствам ввода-вывода (связи с внешними устройствами), отсутствующими
 в самом языке Си. Третья строка - #include&lt;math.h&gt; является директивой
 компилятора для включения заголовочного файла math.h, обеспечивающего
 выполнение математических функций. </P>
<P>Программа на языке Си состоит из ряда функций, из которых
 функция main (главная) является обязательной и служит точкой входа в программу.
 В круглые скобки заключаются параметры функции, причем наличие круглых
 скобок обязательно, если даже список параметров пуст. В фигурные скобки
 заключаются составной оператор (несколько операторов). Для придания тексту
 программы наглядности открывающая и соответствующая ей закрывающая фигурные
 скобки печатаются на одном уровне, а заключенный между ними текст сдвигается
 на 1-2 символа вправо, вложенный блок также сдвигается вправо и т.д. Образуется
 иерархия вложенных блоков, придающая программе на Си характерный вид.
 </P>
<P>В программе описаны переменные a, b, c, х, S вещественного
 типа (float). В отличие от других языков в Си учитывается регистр при
 определении имени переменной, т.е. s и S – разные переменные. Функции
 printf и scanf доступны при подключении заголовочного файла stdio.h и
 служат для вывода на экран и ввода с клавиатуры соответственно. Управляющие
 символы \n в функции printf служат для перевода на новую строку. Символ
 &amp; в функции scanf указывает на адрес вводимой переменной. Ввод и вывод
 переменных вещественного типа производится в формате f. Признаком форматного
 вывода в функции printf является %. При выводе между знаком процента и
 форматной переменной f можно включить общую ширину поля вывода и число
 позиций после десятичной точки. Оператор return 0; служит для выхода из
 функции main , 0 является признаком успешного окончания программы. Завершает
 текст программы закрывающая фигурная скобка, означающая конец функции
 main.</P>
<P>&nbsp;</P>
<a name=6 class="anchor"></a>
<h3>1.6. Интегрированная Среда Borland C</h3>
<P>Экран интегрированной среды содержит 4 основные части:
 главное меню, окно редактирования, окно сообщений, строку состояния. Главное
 меню содержит пункты: File (Файл), Edit (Редактирование), Search (Поиск),
 Run (Исполнить), Compile (Компиляция), Debug (Отладка), Project (Проект),
 Options (Параметры), Window (Окно), Help (Помощь). Рассмотрим основные.</P>
<P> Меню File содержит команды: Open (Открыть существующий
 программный файл), New (Создать новый файл), Save (Сохранить редактируемый
 файл), Save as (Сохранить как - файл сохраняется под новым именем), Change
 dir (Изменить каталог - задаются входные и выходные каталоги, где хранятся
 тексты программ), Quit (Выход из Среды). В меню File приведены также соответствующие
 “горячие “ клавиши для этих команд.</P>
<P>Меню Edit содержит команды Cut (Вырезать), Copy (Копировать),
 Paste (Вставить), Clear (Очистить). </P>
<P>Меню Compile содержит команды Compile (Компиляция) -
 клавиши [Alt]+[F9]. Меню Run содержит пункт Run (Исполнить) - клавиши
 [Ctrl] +[F9]. Меню Help позволяет обратиться к справочной системе, содержащей
 пункты Contents (Содержание), Index (Предметный указатель), Topic search
 (Тематический поиск). Клавиша [F1] приводит к открытию окна подсказки.
 Для получения справки о конкретной функции надо установить курсор на любой
 символ имени функции и нажать [CTRL]+[F1].</P>

<P>&nbsp;</p>
<a name=7 class="anchor"></a>
<h3>1.7. Ввод и выполнение программ в Интегрированной
 Среде Borland C</h3>
<P></P>
<P>Для запуска Си можно использовать меню программы Far
 ([F2]). Входим в меню File ([F10] - File - Change dir) и устанавливаем
 в пункте Input Directory (Входной каталог) имя рабочего каталога, например
 С:\temp\P_64.</P>
<P>Затем набираем программу lab1.c, которая находит стороны
 и площадь треугольника. Расширение .c является для компилятора признаком
 того, что программа составлена на языке Си, расширение .cpp - признак
 программы на языке Си++, объектно-ориентированном расширении языка Си.</P>
<P>Набрав текст программы, сохраните ее, нажав F2 и указав
 имя программы. Компилируем программу, нажав ALT+F9. После исправления
 ошибок запустим программу на выполнение, нажав CTRL+F9. Будет выдано сообщение:
 “Введите гипотенузу и угол треугольника ”. Вводим числа через пробел,
 на экране появляется результат. Для просмотра экрана пользователя с результатами
 нажимаем ALT+F5. После просмотра нажимаем любую клавишу для возврата в
 Интегрированную Среду.</P>
<a name=1 class="anchor"></a>
<h3>1.8. Контрольные вопросы</h3>
<P>1. Понятие идентификатора.</P>
<P>2. Определение переменной. Основные типы переменных.</P>
<P>3. Типы операций в языке Си.</P>
<P>4. Структура программы на языке Си.</P>
<P>5. Для чего используются заголовочные файлы?</P>
<P>6. Как откомпилировать программу?</P>
<P>7. Как выполнить программу?</P>
<P>8. Как просмотреть результат выполнения?</P>
<br><br>
<!--конец-->
      
				


				</div>
			</div>
			
      </div>
    </div>
  </div>
	
	<!--Меню навигации по Темам -->	
	<div aria-label="..." class = "nav-menu">
	 <ul class="pager background-transition-slow">
		 <li title="Наверх" style = "margin-right:15px;	"><a class = "glyphicon glyphicon-menu-up page-scroll" href="#page-top"></a></li>
		 <li title="К предыдущей лекции"><a class = "glyphicon glyphicon-menu-left page-scroll" href="lec0.htm"></a></li>
		 <li title="В содержание"><a class = "glyphicon glyphicon-list-alt" href="lec_index.htm"></a></li>
		 <li title="К следующей лекции"><a class = "glyphicon glyphicon-menu-right page-scroll" href="lec2.htm"></a></li>
	 </ul>
	</div>
	<!---->
	
	</div>
  <!-- jQuery -->
  <script src="../lib/js/jquery.js"></script>

<script src="../lib/css/prettify.js"></script>
<script type="text/javascript">
  !function ($) {
$(function(){
window.prettyPrint && prettyPrint()  
    })
  }(window.jQuery)
</script>

  <!-- Bootstrap Core JavaScript -->
  <script src="../lib/js/bootstrap.min.js"></script>

  <!-- Scrolling Nav JavaScript -->
  <script src="../lib/js/jquery.easing.min.js"></script>
  <script src="../lib/js/scrolling-nav.js"></script>

</body>

</html>
